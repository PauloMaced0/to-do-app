name: Terraform Destroy

on:
  workflow_dispatch: # Trigger this workflow manually from the GitHub Actions UI

jobs:
  terraform-destroy:
    name: Destroy Infrastructure
    runs-on: ubuntu-latest

    steps:
      # Step 1: Checkout the repository
      - name: Checkout repository
        uses: actions/checkout@v3
        with:
          token: ${{ secrets.STATE_TOKEN }}

      # Step 2: Set up Terraform
      - name: Set up Terraform
        uses: hashicorp/setup-terraform@v2
        with:
          terraform_version: 1.5.7

      # Step 3: Terraform Init (Backend)
      - name: Initialize Terraform for Backend
        working-directory: ./infra/backend
        run: terraform init

      # Step 4: Terraform Destroy (Backend)
      - name: Destroy Backend Infrastructure
        working-directory: ./infra/backend
        env:
          AWS_ACCESS_KEY_ID: ${{ secrets.AWS_ACCESS_KEY_ID }}
          AWS_SECRET_ACCESS_KEY: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
        run: terraform destroy -auto-approve

      # Step 5: Commit and Push Backend Terraform State
      - name: Commit and Push Backend Terraform State
        working-directory: ./infra/backend
        run: |
          git config user.name "github-actions[bot]"
          git config user.email "github-actions[bot]@users.noreply.github.com"
          git add terraform.tfstate
          git commit -m "Update Backend Terraform state after destruction"
          git pull --rebase origin main
          git push origin main
        env:
          GITHUB_TOKEN: ${{ secrets.STATE_TOKEN }}

      # Step 6: Terraform Init (Frontend)
      - name: Initialize Terraform for Frontend
        working-directory: ./infra/frontend
        run: terraform init

      # Step 7: Terraform Destroy (Frontend)
      - name: Destroy Frontend Infrastructure
        working-directory: ./infra/frontend
        env:
          AWS_ACCESS_KEY_ID: ${{ secrets.AWS_ACCESS_KEY_ID }}
          AWS_SECRET_ACCESS_KEY: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
        run: terraform destroy -auto-approve

      # Step 8: Commit and Push Frontend Terraform State
      - name: Commit and Push Frontend Terraform State
        working-directory: ./infra/frontend
        run: |
          git config user.name "github-actions[bot]"
          git config user.email "github-actions[bot]@users.noreply.github.com"
          git add terraform.tfstate
          git commit -m "Update Frontend Terraform state after destruction"
          git pull --rebase origin main
          git push origin main
        env:
          GITHUB_TOKEN: ${{ secrets.STATE_TOKEN }}
