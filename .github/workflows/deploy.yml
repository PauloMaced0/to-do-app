name: Terraform Backend and Frontend Deployment

on:
  push:
    branches:
      - main
    paths-ignore:
      - 'infra/backend/terraform.tfstate'
      - 'infra/frontend/terraform.tfstate'
  workflow_dispatch:

jobs:
  terraform-deploy:
    name: Deploy Backend and Frontend Infrastructure
    runs-on: ubuntu-latest

    steps:
      # Checkout the repository
      - name: Checkout repository
        uses: actions/checkout@v3
        with:
          token: ${{ secrets.STATE_TOKEN }}

      # Set up Terraform
      - name: Set up Terraform
        uses: hashicorp/setup-terraform@v2
        with:
          terraform_wrapper: false
          terraform_version: 1.5.7

      # Terraform Init (Backend)
      - name: Initialize Terraform for Backend
        working-directory: ./infra/backend
        run: terraform init

      # Terraform Apply (Backend)
      - name: Apply Backend Terraform Configuration
        working-directory: ./infra/backend
        env:
          AWS_ACCESS_KEY_ID: ${{ secrets.AWS_ACCESS_KEY_ID }}
          AWS_SECRET_ACCESS_KEY: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
        if: success()
        run: terraform apply -auto-approve

      - name: Commit and Push Terraform Backend State 
        run: |
          git config user.name "github-actions[bot]"
          git config user.email "github-actions[bot]@users.noreply.github.com"
          if git ls-files ./infra/backend/terraform.tfstate --error-unmatch > /dev/null 2>&1; then
            # File is tracked, check for changes
            if git diff --quiet ./infra/backend/terraform.tfstate; then
              echo "No changes to commit for terraform.tfstate"
            else
              echo "Changes detected in terraform.tfstate"
              git add ./infra/backend/terraform.tfstate
              git commit -m "Update Backend Terraform state after deploy"
              git push origin main
            fi
          else
            # File is new (untracked)
            echo "terraform.tfstate is a new file. Adding to the repository."
            git add ./infra/backend/terraform.tfstate
            git commit -m "Add Backend Terraform state after deploy"
            git push origin main
          fi
        env:
          GITHUB_TOKEN: ${{ secrets.STATE_TOKEN }}

      # Capture Backend Outputs
      - name: Get Backend Outputs
        working-directory: ./infra/backend
        id: backend_outputs
        run: |
          terraform output -raw region > REGION
          terraform output -raw user_pool_id > USER_POOL_ID
          terraform output -raw user_pool_client_id > USER_POOL_CLIENT_ID
          terraform output -raw cognito_domain > COGNITO_DOMAIN
          terraform output -raw api_endpoint > BACKEND_URL 
        env:
          AWS_ACCESS_KEY_ID: ${{ secrets.AWS_ACCESS_KEY_ID }}
          AWS_SECRET_ACCESS_KEY: ${{ secrets.AWS_SECRET_ACCESS_KEY }}

      # Terraform Init (Frontend)
      - name: Initialize Terraform for Frontend
        working-directory: ./infra/frontend
        run: terraform init

      # Terraform Apply (Frontend)
      - name: Apply Frontend Terraform Configuration
        working-directory: ./infra/frontend
        env:
          AWS_ACCESS_KEY_ID: ${{ secrets.AWS_ACCESS_KEY_ID }}
          AWS_SECRET_ACCESS_KEY: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
        if: success()
        run: terraform apply -auto-approve

      # Capture Frontend Outputs
      - name: Get Frontend Outputs
        working-directory: ./infra/frontend
        id: frontend_outputs
        run: |
          terraform output -raw cloudfront_distribution_domain_name > FRONTEND_URL
          terraform output -raw s3_bucket_name > S3_BUCKET_NAME
        env:
          AWS_ACCESS_KEY_ID: ${{ secrets.AWS_ACCESS_KEY_ID }}
          AWS_SECRET_ACCESS_KEY: ${{ secrets.AWS_SECRET_ACCESS_KEY }}

      # Build React App
      - name: Build React App
        working-directory: ./frontend/todo_ui
        run: |
          export REACT_APP_REGION=$(cat ../../infra/backend/REGION)
          export REACT_APP_USER_POOL_ID=$(cat ../../infra/backend/USER_POOL_ID)
          export REACT_APP_USER_POOL_CLIENT_ID=$(cat ../../infra/backend/USER_POOL_CLIENT_ID)
          export REACT_APP_COGNITO_DOMAIN=$(cat ../../infra/backend/COGNITO_DOMAIN)
          export REACT_APP_BACKEND_URL=$(cat ../../infra/backend/BACKEND_URL)
          export REACT_APP_FRONTEND_URL=$(cat ../../infra/frontend/FRONTEND_URL)
          
          # Display the variables for debugging
          echo "REACT_APP_REGION: $REACT_APP_REGION"
          echo "REACT_APP_USER_POOL_ID: $REACT_APP_USER_POOL_ID"
          echo "REACT_APP_USER_POOL_CLIENT_ID: $REACT_APP_USER_POOL_CLIENT_ID"
          echo "REACT_APP_COGNITO_DOMAIN: $REACT_APP_COGNITO_DOMAIN"
          echo "REACT_APP_BACKEND_URL: $REACT_APP_BACKEND_URL"
          echo "REACT_APP_FRONTEND_URL: $REACT_APP_FRONTEND_URL"

          npm install
          npm run build
        env:
          AWS_ACCESS_KEY_ID: ${{ secrets.AWS_ACCESS_KEY_ID }}
          AWS_SECRET_ACCESS_KEY: ${{ secrets.AWS_SECRET_ACCESS_KEY }}

      # Upload React Build to S3
      - name: Upload React Build to S3
        working-directory: ./frontend/todo_ui
        run: |
          S3_BUCKET_NAME=$(cat ../../infra/frontend/S3_BUCKET_NAME)
          echo "Uploading to S3 Bucket: $S3_BUCKET_NAME"
          aws s3 cp ./build s3://$S3_BUCKET_NAME/ --recursive
        env:
          AWS_ACCESS_KEY_ID: ${{ secrets.AWS_ACCESS_KEY_ID }}
          AWS_SECRET_ACCESS_KEY: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
          AWS_DEFAULT_REGION: 'eu-west-1'

      - name: Commit and Push Terraform Frontend State 
        run: |
          git config user.name "github-actions[bot]"
          git config user.email "github-actions[bot]@users.noreply.github.com"
          if git ls-files ./infra/frontend/terraform.tfstate --error-unmatch > /dev/null 2>&1; then
            # File is tracked, check for changes
            if git diff --quiet ./infra/frontend/terraform.tfstate; then
              echo "No changes to commit for terraform.tfstate"
            else
              echo "Changes detected in terraform.tfstate"
              git add ./infra/frontend/terraform.tfstate
              git commit -m "Update Frontend Terraform state after deploy"
              git push origin main
            fi
          else
            # File is new (untracked)
            echo "terraform.tfstate is a new file. Adding to the repository."
            git add ./infra/frontend/terraform.tfstate
            git commit -m "Add Frontend Terraform state after deploy"
            git push origin main
          fi
        env:
          GITHUB_TOKEN: ${{ secrets.STATE_TOKEN }}
